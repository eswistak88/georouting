//
// Generated file, do not edit! Created by nedtool 5.6 from mods/modules/messages/TaxiPOIMessage.msg.
//

#ifndef __VEINS_TAXIPOIMESSAGE_M_H
#define __VEINS_TAXIPOIMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "veins/base/utils/Coord.h"
#include "veins/modules/messages/DemoServiceAdvertisement_m.h"
#include "veins/base/utils/SimpleAddress.h"
// }}


namespace veins {

/**
 * Class generated from <tt>mods/modules/messages/TaxiPOIMessage.msg:32</tt> by nedtool.
 * <pre>
 * packet TaxiPOIMessage extends DemoServiceAdvertisment
 * {
 *     int MsgID;
 *     LAddress::L2Type Sender;
 *     Coord SenderPos;
 *     int TargetPOI;
 * }
 * </pre>
 */
class TaxiPOIMessage : public ::veins::DemoServiceAdvertisment
{
  protected:
    int MsgID;
    LAddress::L2Type Sender;
    Coord SenderPos;
    int TargetPOI;

  private:
    void copy(const TaxiPOIMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TaxiPOIMessage&);

  public:
    TaxiPOIMessage(const char *name=nullptr, short kind=0);
    TaxiPOIMessage(const TaxiPOIMessage& other);
    virtual ~TaxiPOIMessage();
    TaxiPOIMessage& operator=(const TaxiPOIMessage& other);
    virtual TaxiPOIMessage *dup() const override {return new TaxiPOIMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getMsgID() const;
    virtual void setMsgID(int MsgID);
    virtual LAddress::L2Type& getSender();
    virtual const LAddress::L2Type& getSender() const {return const_cast<TaxiPOIMessage*>(this)->getSender();}
    virtual void setSender(const LAddress::L2Type& Sender);
    virtual Coord& getSenderPos();
    virtual const Coord& getSenderPos() const {return const_cast<TaxiPOIMessage*>(this)->getSenderPos();}
    virtual void setSenderPos(const Coord& SenderPos);
    virtual int getTargetPOI() const;
    virtual void setTargetPOI(int TargetPOI);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TaxiPOIMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TaxiPOIMessage& obj) {obj.parsimUnpack(b);}

} // namespace veins

#endif // ifndef __VEINS_TAXIPOIMESSAGE_M_H

